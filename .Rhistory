#library(dplyr)
#library(data.table)
#library(tibble)
#library(stringr)
#library(ggplot2)
#Load this data into steps Data frame in R
steps <- read.csv('activity.csv')
#converting to Date
steps$date <- as.Date(steps$date)
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
#Mean and Median calculation per day
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
#DF
#First make a new Data Frame by grouping by Date and summing the steps per date
steps_day <- steps %>%
group_by(date) %>%
summarise(num_steps=sum(steps))
#Mean and Median calculation per day
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
#DF
#First make a new Data Frame by grouping by Date and summing the steps per date
steps_day <- steps %>%
group_by(date) %>%
summarise(num_steps=sum(steps))
#Mean and Median calculation per day
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
#DF
#First make a new Data Frame by grouping by Date and summing the steps per date
steps_mean_median <- steps %>%
group_by(date) %>%
summarise(tot_steps=sum(steps),mean_steps=mean(steps,na.rm=TRUE),median_steps= median(steps[steps>0]))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
#setwd( "C:\\Users\\RamamurthyV\\Documents\\R\\5.Reproducible Research\\Project 1\\RepData_PeerAssessment1")
setwd( "C:\\Users\\RamamurthyV\\Documents\\R\\5.Reproducible Research\\Project 1")
#library(dplyr)
#library(data.table)
#library(tibble)
#library(stringr)
#library(ggplot2)
#Load this data into steps Data frame in R
steps <- read.csv('activity.csv')
#converting to Date
steps$date <- as.Date(steps$date)
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
#setwd( "C:\\Users\\RamamurthyV\\Documents\\R\\5.Reproducible Research\\Project 1\\RepData_PeerAssessment1")
setwd( "C:\\Users\\RamamurthyV\\Documents\\R\\5.Reproducible Research\\Project 1")
#library(dplyr)
#library(data.table)
#library(tibble)
#library(stringr)
#library(ggplot2)
#Load this data into steps Data frame in R
steps <- read.csv('activity.csv')
#converting to Date
steps$date <- as.Date(steps$date)
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
#Mean and Median calculation per day
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
#DF
#First make a new Data Frame by grouping by Date and summing the steps per date
steps_mean_median <- steps %>%
group_by(date) %>%
summarise(tot_steps=sum(steps),mean_steps=mean(steps,na.rm=TRUE),median_steps= median(steps[steps>0]))
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
#DF
#First make a new Data Frame by grouping by Date and summing the steps per date
steps_mean_median <- steps %>%
group_by(date) %>%
summarise(tot_steps=sum(steps),mean_steps=mean(steps,na.rm=TRUE),median_steps= median(steps[steps>0]))
steps_mean_median <- na.omit(steps_mean_median)
#view(steps_mean_median)
totalmean <- mean(steps_mean_median$tot_steps)
#totalmean
totalmedian <- median(steps_mean_median$tot_steps)
#totalmedian
steps <- read.csv('activity.csv')
steps$date <- as.Date(steps$date)
steps_mean_median <- steps %>%
group_by(date) %>%
summarise(tot_steps=sum(steps),mean_steps=mean(steps,na.rm=TRUE),median_steps= median(steps[steps>0]))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
#setwd( "C:\\Users\\RamamurthyV\\Documents\\R\\5.Reproducible Research\\Project 1\\RepData_PeerAssessment1")
setwd( "C:\\Users\\RamamurthyV\\Documents\\R\\5.Reproducible Research\\Project 1")
library(dplyr)
library(data.table)
library(tibble)
library(stringr)
library(ggplot2)
#Load this data into steps Data frame in R
steps <- read.csv('activity.csv')
#converting to Date
steps$date <- as.Date(steps$date)
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
#Mean and Median calculation per day
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
#DF
#First make a new Data Frame by grouping by Date and summing the steps per date
steps_mean_median <- steps %>%
group_by(date) %>%
summarise(tot_steps=sum(steps),mean_steps=mean(steps,na.rm=TRUE),median_steps= median(steps[steps>0]))
steps_mean_median <- na.omit(steps_mean_median)
#view(steps_mean_median)
totalmean <- mean(steps_mean_median$tot_steps)
#totalmean
totalmedian <- median(steps_mean_median$tot_steps)
#totalmedian
#showing it again in the above histogram plot
hist(steps_mean_median$tot_steps,col="green", main="Total number of steps each day", xlab="Number of steps per day",border="blue", ylab="Frequency of Steps")
abline(v=totalmean, lty=5, col="black")
abline(v=totalmedian, lty=6, col="red")
steps <- na.omit(steps)
#view(steps) # 15264 entries
steps_avg_time <- steps %>%
group_by(interval) %>%
summarise(mean_steps=mean(steps,na.rm=TRUE))
#view(steps_avg_time)
p <- ggplot(steps_avg_time, aes(x=interval, y=mean_steps)) +
xlab("Time Interval in minutes") +
ylab("Average Steps each 5 minute interval") +
ggtitle("Time series of average steps per day")+
geom_line( color="steelblue") +
geom_point() +
theme(axis.text.x=element_text(angle=60, hjust=1)) +
geom_line(aes(interval,max(mean_steps))) +
geom_text(aes(label=ifelse(mean_steps>200,round(mean_steps,2),'')),hjust=0,vjust=0)
#geom_abline(v=max(mean_steps),lty=3,color="red")
#stat_summary(fun.y = max(mean_steps), colour = "orange", geom = "point", size = 5)
p
#Using the Imputed data set here
#Load this data into steps Data frame in R
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
# Data grouped by Interval and calculating mean per interval of 5 minutes
steps_avg_time <- steps %>%
group_by(interval) %>%
summarise(mean_steps=mean(steps,na.rm=TRUE))
#Merge the two data sets
merged <- merge(steps, steps_avg_time)
#view(merged)
# Final_steps column will have the steps value or mean(steps) if NA in initial data set
merged$final_steps <- ifelse(is.na(merged$steps), round(merged$mean_steps,2),as.integer(merged$steps))
# view(merged)
#Final imputed data set
new_steps <- merged[,c("interval","date","final_steps")]
#view(new_steps)
new_steps$day <- weekdays(as.Date(new_steps$date), abbr=TRUE)
#view(new_steps)
for (i in 1:nrow(new_steps)) {
if (new_steps[i,]$day %in% c("Sat","Sun")) {
new_steps[i,]$day<-"weekend"
}
else{
new_steps[i,]$day<-"weekday"
}
}
#view(new_steps)
#Average steps taken per 5 minute interval across weekdays and weekends
steps_avg_td <- new_steps %>%
group_by(interval,day) %>%
summarise(mean_steps=round(mean(steps,na.rm=TRUE),2))
#view(steps_avg_td)
#Make a time series panel plot
ggplot( data= steps_avg_td, aes(interval,mean_steps))+
geom_line(color="steelblue",size=1)+
labs(title ="Average number of steps across 5 min interval during weekdays and weekends ",
y="Number of steps",
x="Interval")+
facet_grid(day ~.)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd( "C:\\Users\\RamamurthyV\\Documents\\R\\5.Reproducible Research\\Project 1")
library(dplyr)
library(data.table)
library(tibble)
library(stringr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd( "C:\\Users\\RamamurthyV\\Documents\\R\\5.Reproducible Research\\Project 1")
library(dplyr)
library(data.table)
library(tibble)
library(stringr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
#setwd( "C:\\Users\\RamamurthyV\\Documents\\R\\5.Reproducible Research\\Project 1\\RepData_PeerAssessment1")
#Load this data into steps Data frame in R
steps <- read.csv('activity.csv')
#converting to Date
steps$date <- as.Date(steps$date)
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
#Mean and Median calculation per day
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
#DF
#First make a new Data Frame by grouping by Date and summing the steps per date
steps_mean_median <- steps %>%
group_by(date) %>%
summarise(tot_steps=sum(steps),mean_steps=mean(steps,na.rm=TRUE),median_steps= median(steps[steps>0]))
steps_mean_median <- na.omit(steps_mean_median)
#view(steps_mean_median)
totalmean <- mean(steps_mean_median$tot_steps)
#totalmean
totalmedian <- median(steps_mean_median$tot_steps)
#totalmedian
#showing it again in the above histogram plot
hist(steps_mean_median$tot_steps,col="green", main="Total number of steps each day", xlab="Number of steps per day",border="blue", ylab="Frequency of Steps")
abline(v=totalmean, lty=5, col="black")
abline(v=totalmedian, lty=6, col="red")
steps <- na.omit(steps)
#view(steps) # 15264 entries
steps_avg_time <- steps %>%
group_by(interval) %>%
summarise(mean_steps=mean(steps,na.rm=TRUE))
#view(steps_avg_time)
p <- ggplot(steps_avg_time, aes(x=interval, y=mean_steps)) +
xlab("Time Interval in minutes") +
ylab("Average Steps each 5 minute interval") +
ggtitle("Time series of average steps per day")+
geom_line( color="steelblue") +
geom_point() +
theme(axis.text.x=element_text(angle=60, hjust=1)) +
geom_line(aes(interval,max(mean_steps))) +
geom_text(aes(label=ifelse(mean_steps>200,round(mean_steps,2),'')),hjust=0,vjust=0)
#geom_abline(v=max(mean_steps),lty=3,color="red")
#stat_summary(fun.y = max(mean_steps), colour = "orange", geom = "point", size = 5)
p
#Using the Imputed data set here
#Load this data into steps Data frame in R
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
# Data grouped by Interval and calculating mean per interval of 5 minutes
steps_avg_time <- steps %>%
group_by(interval) %>%
summarise(mean_steps=mean(steps,na.rm=TRUE))
#Merge the two data sets
merged <- merge(steps, steps_avg_time)
#view(merged)
# Final_steps column will have the steps value or mean(steps) if NA in initial data set
merged$final_steps <- ifelse(is.na(merged$steps), round(merged$mean_steps,2),as.integer(merged$steps))
# view(merged)
#Final imputed data set
new_steps <- merged[,c("interval","date","final_steps")]
#view(new_steps)
new_steps$day <- weekdays(as.Date(new_steps$date), abbr=TRUE)
#view(new_steps)
for (i in 1:nrow(new_steps)) {
if (new_steps[i,]$day %in% c("Sat","Sun")) {
new_steps[i,]$day<-"weekend"
}
else{
new_steps[i,]$day<-"weekday"
}
}
#view(new_steps)
#Average steps taken per 5 minute interval across weekdays and weekends
steps_avg_td <- new_steps %>%
group_by(interval,day) %>%
summarise(mean_steps=round(mean(steps,na.rm=TRUE),2))
#view(steps_avg_td)
#Make a time series panel plot
ggplot( data= steps_avg_td, aes(interval,mean_steps))+
geom_line(color="steelblue",size=1)+
labs(title ="Average number of steps across 5 min interval during weekdays and weekends ",
y="Number of steps",
x="Interval")+
facet_grid(day ~.)
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
# Data grouped by Interval and calculating mean per interval of 5 minutes
steps_avg_time <- steps %>%
group_by(interval) %>%
summarise(mean_steps=mean(steps,na.rm=TRUE))
#Merge the two data sets
merged <- merge(steps, steps_avg_time)
#view(merged)
# Final_steps column will have the steps value or mean(steps) if NA in initial data set
merged$final_steps <- ifelse(is.na(merged$steps), round(merged$mean_steps,2),as.integer(merged$steps))
# view(merged)
#Final imputed data set
new_steps <- merged[,c("interval","date","final_steps")]
#view(new_steps)
#rename the final_steps column to steps
new_steps <- rename(new_steps, steps=final_steps)
#Replot the histogram, median and mean using the new imputed data set
#First make a new Data Frame by grouping by Date and summing the steps per date
steps_new_day <- new_steps %>%
group_by(date) %>%
summarise(num_steps=sum(steps))
#view(steps_new_day)
steps_new_mean_median <- new_steps %>%
group_by(date) %>%
summarise(tot_steps=sum(steps),mean_steps=mean(steps,na.rm=TRUE),median_steps= median(steps[steps>0]))
#view(steps_new_mean_median)
total_new_mean <- mean(steps_new_mean_median$tot_steps)
#total_new_mean
total_new_median <- median(steps_new_mean_median$tot_steps)
#total_new_median
hist(steps_new_day$num_steps,col="green", main="Total number of steps each day(Imputed)", xlab="Number of steps per day",border="blue", ylab="Frequency of Steps")
abline(v=total_new_mean, lty=5, col="black")
abline(v=total_new_median, lty=6, col="red")
rm(list=ls())
setwd( "C:\\Users\\RamamurthyV\\Documents\\R\\5.Reproducible Research\\Project 1")
library(dplyr)
library(data.table)
library(tibble)
library(stringr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
#setwd( "C:\\Users\\RamamurthyV\\Documents\\R\\5.Reproducible Research\\Project 1\\RepData_PeerAssessment1")
#Load this data into steps Data frame in R
steps <- read.csv('activity.csv')
#converting to Date
steps$date <- as.Date(steps$date)
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
#Mean and Median calculation per day
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
#DF
#First make a new Data Frame by grouping by Date and summing the steps per date
steps_mean_median <- steps %>%
group_by(date) %>%
summarise(tot_steps=sum(steps),mean_steps=mean(steps,na.rm=TRUE),median_steps= median(steps[steps>0]))
steps_mean_median <- na.omit(steps_mean_median)
#view(steps_mean_median)
totalmean <- mean(steps_mean_median$tot_steps)
#totalmean
totalmedian <- median(steps_mean_median$tot_steps)
#totalmedian
#showing it again in the above histogram plot
hist(steps_mean_median$tot_steps,col="green", main="Total number of steps each day", xlab="Number of steps per day",border="blue", ylab="Frequency of Steps")
abline(v=totalmean, lty=5, col="black")
abline(v=totalmedian, lty=6, col="red")
steps <- na.omit(steps)
#view(steps) # 15264 entries
steps_avg_time <- steps %>%
group_by(interval) %>%
summarise(mean_steps=mean(steps,na.rm=TRUE))
#view(steps_avg_time)
p <- ggplot(steps_avg_time, aes(x=interval, y=mean_steps)) +
xlab("Time Interval in minutes") +
ylab("Average Steps each 5 minute interval") +
ggtitle("Time series of average steps per day")+
geom_line( color="steelblue") +
geom_point() +
theme(axis.text.x=element_text(angle=60, hjust=1)) +
geom_line(aes(interval,max(mean_steps))) +
geom_text(aes(label=ifelse(mean_steps>200,round(mean_steps,2),'')),hjust=0,vjust=0)
#geom_abline(v=max(mean_steps),lty=3,color="red")
#stat_summary(fun.y = max(mean_steps), colour = "orange", geom = "point", size = 5)
p
#Using the Imputed data set here
#Load this data into steps Data frame in R
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
# Data grouped by Interval and calculating mean per interval of 5 minutes
steps_avg_time <- steps %>%
group_by(interval) %>%
summarise(mean_steps=mean(steps,na.rm=TRUE))
#Merge the two data sets
merged <- merge(steps, steps_avg_time)
#view(merged)
# Final_steps column will have the steps value or mean(steps) if NA in initial data set
merged$final_steps <- ifelse(is.na(merged$steps), round(merged$mean_steps,2),as.integer(merged$steps))
# view(merged)
#Final imputed data set
new_steps <- merged[,c("interval","date","final_steps")]
#view(new_steps)
new_steps$day <- weekdays(as.Date(new_steps$date), abbr=TRUE)
#view(new_steps)
for (i in 1:nrow(new_steps)) {
if (new_steps[i,]$day %in% c("Sat","Sun")) {
new_steps[i,]$day<-"weekend"
}
else{
new_steps[i,]$day<-"weekday"
}
}
#view(new_steps)
#Average steps taken per 5 minute interval across weekdays and weekends
steps_avg_td <- new_steps %>%
group_by(interval,day) %>%
summarise(mean_steps=round(mean(steps,na.rm=TRUE),2))
#view(steps_avg_td)
#Make a time series panel plot
ggplot( data= steps_avg_td, aes(interval,mean_steps))+
geom_line(color="steelblue",size=1)+
labs(title ="Average number of steps across 5 min interval during weekdays and weekends ",
y="Number of steps",
x="Interval")+
facet_grid(day ~.)
#Using the Imputed data set here
#Load this data into steps Data frame in R
steps <- read.csv('activity.csv')
#str(steps)
#17568 observations, 3 columns
#head(steps)
#NA indicates no steps
steps$date <- as.Date(steps$date)
# Data grouped by Interval and calculating mean per interval of 5 minutes
steps_avg_time <- steps %>%
group_by(interval) %>%
summarise(mean_steps=mean(steps,na.rm=TRUE))
#Merge the two data sets
merged <- merge(steps, steps_avg_time)
#view(merged)
# Final_steps column will have the steps value or mean(steps) if NA in initial data set
merged$final_steps <- ifelse(is.na(merged$steps), round(merged$mean_steps,2),as.integer(merged$steps))
# view(merged)
#Final imputed data set
new_steps <- merged[,c("interval","date","final_steps")]
#view(new_steps)
new_steps$day <- weekdays(as.Date(new_steps$date), abbr=TRUE)
#view(new_steps)
for (i in 1:nrow(new_steps)) {
if (new_steps[i,]$day %in% c("Sat","Sun")) {
new_steps[i,]$day<-"weekend"
}
else{
new_steps[i,]$day<-"weekday"
}
}
#view(new_steps)
#Average steps taken per 5 minute interval across weekdays and weekends
steps_avg_td <- new_steps %>%
group_by(interval,day) %>%
summarise(mean_steps=round(mean(steps,na.rm=TRUE),2))
#view(steps_avg_td)
#Make a time series panel plot
ggplot( data= steps_avg_td, aes(interval,mean_steps))+
geom_line(color="steelblue",size=1)+
labs(title ="Average number of steps across 5 min interval during weekdays and weekends ",
y="Number of steps",
x="Interval")+
facet_grid(day ~.)
source('~/R/5.Reproducible Research/Project 1/codecheck.R')
